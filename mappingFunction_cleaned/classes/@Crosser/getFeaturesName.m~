function featNames = getFeaturesName(sourceDevId,subSourceDev,baseDir,userIDs,targetDevId,subTargetDev)

featNames = {};
for ii = 1:length(userIDs)
    currId = userIDs{ii};
    if isempty(subSourceDev)
        sourceFile = {[baseDir,currId , filesep, sourceDevId , '.csv' ]};
    else
        for jj = 1:length(subSourceDev)
            sourceFile{jj} = [baseDir,currId , filesep, sourceDevId , filesep, subSourceDev{jj} '.csv' ];
        end
    end
    if isempty(subTargetDev)
        targetFile = {[baseDir,currId , filesep, targetDevId , '.csv' ]};
    else
        for jj = 1:length(subTargetDev)
            targetFile{jj} = [baseDir,currId , filesep, targetDevId , filesep, subTargetDev{jj} '.csv' ];
        end
    end
    
    featNames = innerCheckingLoop(featNames,sourceFile)
end
            
    
    
    
end

function featNames = innerCheckingLoop(featNames,sourceFile)
    for jj = 1:length(sourceFile)
        try
            fid = fopen(sourceFile{jj});
            assert(fid~=1)
            featIds = fgets(fid);
            fclose(fid);
            
            while ~(isletter(featIds(end)) || isnumber(featIds(end)))
                featIds = featIds(1:end-1);
            end
            featIds = strsplit(featIds,',');
            for kk = 1:length(featIds)
                if(isnumber(featIds{kk}))
                    featIds{kk} = ['f_',featIds{kk} ];
                end
            end
            if ~isempty(featNames) && ~isequal(featIds,featNames)
                error('Features ids are not the same for all the users');
            else
                featNames = featIds;
            end
            
            
        catch ME
            switch ME.identifier
                case 'MATLAB:assertion:failed'
                    true;
                otherwise
                    error(ME)
            end
        end
    end

end


